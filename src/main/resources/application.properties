# Configure the View Resolver
spring.view.prefix=/WEB-INF/jsp/
spring.view.suffix=.jsp

# ========================= #
# DATABASE CONNECTION SETUP #
# ========================= #
# The URL to your database
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
#spring.datasource.url=${JDBC_DATABASE_URL}

# User name and Password to your database
spring.datasource.username=defaultuser
spring.datasource.password=defaultuser
#spring.datasource.username=${JDBC_DATABASE_USERNAME}
#spring.datasource.password=${JDBC_DATABASE_PASSWORD}

# What Driver to use
spring.datasource.driver-class-name=org.postgresql.Driver
server.port=8080


# ============================= #
# DATA JPA - HIBERNATE SETTINGS #
# ============================= #

# To offload the responsibility to create the database tables for our
# entities to the DATA JPA system, we can use the following configuration
spring.jpa.hibernate.ddl-auto=update

# There are 5 possible values we can give this configuration, see below for what each one does
# update      -> update the schema
# create      -> creates the schema, destroying previous data
# create-drop -> creates the schema, drop the schema at the end of the session
# none        -> do nothing
# validate    -> Validate the schema, makes no changes to the database

# NOTE:
# Sometimes in development when rapid changes are made on entities, the database
# tables can become a bit wonky, e.g. you add attributes to entities, change
# data type (e.g. int to Long), etc. If you are having some weird problems you can
# try and set this option to `create` and run the system to force a drop of the schema
# and creation of the schema as it should be.
# ALL THE DATA IN THE DATABASE WILL BE LOST. BACK IT UP IF YOU NEED IT!
# Just remember to revert the option back to `update` or `none` if you want any
# data to be persistent after that.

# Log SQL Statements
spring.jpa.show-sql=true


# Mail config:

spring.mail.host=smtp.gmail.com
spring.mail.username=uppskriftabankinn
spring.mail.password=uppskrift
spring.mail.port=465

#spring.mail.properties.mail.smtp.auth = true
#spring.mail.properties.mail.smtp.socketFactory.port = 465
#spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory
#spring.mail.properties.mail.smtp.socketFactory.fallback = false
spring.mail.properties.mail.smtp.ssl.enable = true
#spring.mail.properties.mail.smtp.ssl.enable = true
##spring.mail.properties.mail.smtp.starttls.enable=true
#spring.mail.properties.mail.smtp.starttls.required=true
#spring.mail.properties.mail.smtp.auth = true
#spring.mail.properties.mail.socketFactory.port=587
#spring.mail.properties.mail.socketFactory.class=javax.net.ssl.SSLSocketFactory
#spring.mail.properties.mail.socketFactory.fallback=true

